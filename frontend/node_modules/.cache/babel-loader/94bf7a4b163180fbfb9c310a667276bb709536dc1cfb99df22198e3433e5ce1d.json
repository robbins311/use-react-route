{"ast":null,"code":"var _jsxFileName = \"/Users/robbins312/Downloads/16-adv-route-proj/frontend/src/pages/EventsDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventsDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsDetailPage;\nexport default EventsDetailPage;\n\n//\nexport async function loader({\n  request,\n  params\n}) {\n  // useParams는 훅이라 사용할수없지만, loader 자체에서 제공해주는 params를 통해 접근가능\n  const id = params.eventsID;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details\"\n    }, {\n      status: 500\n    });\n  } else {\n    console.log(response);\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["React","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventsID","response","fetch","ok","message","status","console","log","$RefreshReg$"],"sources":["/Users/robbins312/Downloads/16-adv-route-proj/frontend/src/pages/EventsDetail.js"],"sourcesContent":["import React from \"react\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nconst EventsDetailPage = () => {\n  const data = useLoaderData();\n  return (\n    <>\n      <EventItem event={data.event}></EventItem>\n    </>\n  );\n};\n\nexport default EventsDetailPage;\n\n//\nexport async function loader({ request, params }) {\n  // useParams는 훅이라 사용할수없지만, loader 자체에서 제공해주는 params를 통해 접근가능\n  const id = params.eventsID;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({ message: \"Could not fetch details\" }, { status: 500 });\n  } else {\n    console.log(response);\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC,gBAC1C,CAAC;AAEP,CAAC;AAACP,EAAA,CAPID,gBAAgB;EAAA,QACPN,aAAa;AAAA;AAAAe,EAAA,GADtBT,gBAAgB;AAStB,eAAeA,gBAAgB;;AAE/B;AACA,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD;EACA,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}