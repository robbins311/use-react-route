{"ast":null,"code":"var _jsxFileName = \"/Users/robbins312/Downloads/16-adv-route-proj/frontend/src/pages/NewEvent.js\";\nimport React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventeData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventeData)\n  });\n\n  // 422 오류 일때 reponse 리턴하면 useActiondata를 form에서 써야함\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"could not save data\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventeData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/Users/robbins312/Downloads/16-adv-route-proj/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from \"react\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\n\nconst NewEventPage = () => {\n  return <EventForm method=\"post\" />;\n};\n\nexport default NewEventPage;\n\nexport async function action({ request, params }) {\n  const data = await request.formData();\n\n  const eventeData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventeData),\n  });\n\n  // 422 오류 일때 reponse 리턴하면 useActiondata를 form에서 써야함\n  if (response.status === 422) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ message: \"could not save data\" }, { status: 500 });\n  }\n\n  return redirect(\"/events\");\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOD,OAAA,CAACJ,SAAS;IAACM,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACC,EAAA,GAFIN,YAAY;AAIlB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DlB,MAAM,EAAE,MAAM;IACdmB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,UAAU;EACjC,CAAC,CAAC;;EAEF;EACA,IAAIM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAON,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM7B,IAAI,CAAC;MAAE8B,OAAO,EAAE;IAAsB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EACjE;EAEA,OAAO3B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAS,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}